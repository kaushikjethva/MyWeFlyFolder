// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeflyAPI.Infrastructure;

namespace WeflyAPI.Migrations
{
    [DbContext(typeof(clsWeflyDbContext))]
    partial class clsWeflyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeflyAPI.Models.clsBookingDetails", b =>
                {
                    b.Property<int>("paymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnName("customerId");

                    b.Property<string>("address")
                        .IsRequired();

                    b.Property<string>("cardNumber")
                        .IsRequired();

                    b.Property<string>("city")
                        .IsRequired();

                    b.Property<string>("emailId")
                        .IsRequired();

                    b.Property<string>("firstName")
                        .IsRequired();

                    b.Property<DateTime>("journeyTime");

                    b.Property<string>("laststName")
                        .IsRequired();

                    b.Property<long>("mobileNo");

                    b.Property<int>("noSeatsBooked");

                    b.Property<string>("pinCode")
                        .IsRequired();

                    b.Property<string>("planeId")
                        .IsRequired();

                    b.Property<string>("routeId")
                        .IsRequired();

                    b.Property<string>("scheduleId")
                        .IsRequired();

                    b.Property<string>("state")
                        .IsRequired();

                    b.Property<long>("ticketPrice");

                    b.HasKey("paymentId");

                    b.HasAlternateKey("Id");

                    b.HasAlternateKey("Id", "paymentId");

                    b.ToTable("tblBookingDetails");
                });

            modelBuilder.Entity("WeflyAPI.Models.clsCity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("cityCode");

                    b.Property<string>("AirportCode")
                        .IsRequired();

                    b.Property<string>("AirportName")
                        .IsRequired();

                    b.Property<string>("CityName")
                        .IsRequired();

                    b.Property<string>("Lattitude");

                    b.Property<string>("Longitude");

                    b.HasKey("Id");

                    b.ToTable("tblCities");
                });

            modelBuilder.Entity("WeflyAPI.Models.clsFlightRoute", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("routeId");

                    b.Property<string>("fromCityCode");

                    b.Property<string>("fromCityName");

                    b.Property<string>("toCityCode");

                    b.Property<string>("toCityName");

                    b.HasKey("Id");

                    b.ToTable("tblFlightRoute");
                });

            modelBuilder.Entity("WeflyAPI.Models.clsFlightSchedule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("scheduleId");

                    b.Property<string>("airlineLogo");

                    b.Property<string>("airlineName");

                    b.Property<DateTime>("arrivalTimeDestination");

                    b.Property<DateTime>("arrivalTimeSource");

                    b.Property<int>("availableSeats");

                    b.Property<DateTime>("departTimeSource");

                    b.Property<long>("flightDuration");

                    b.Property<long>("flightPrice");

                    b.Property<bool>("isMealAvailable");

                    b.Property<int>("noOfStops");

                    b.Property<string>("planeId");

                    b.Property<string>("routeId");

                    b.HasKey("Id");

                    b.ToTable("tblFlightSchedule");
                });

            modelBuilder.Entity("WeflyAPI.Models.clsPlaneSpecification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("planeId");

                    b.Property<bool>("isFlightEntertainmentAvailable");

                    b.Property<bool>("isWifiAvailable");

                    b.Property<long>("legSpace");

                    b.Property<string>("planeManufacturer");

                    b.Property<string>("planeModel");

                    b.Property<int>("seats");

                    b.HasKey("Id");

                    b.ToTable("tblPlaneSpecification");
                });
#pragma warning restore 612, 618
        }
    }
}
